package com.example.demo.xxe;

import java.io.BufferedOutputStream;
import java.io.OutputStream;
import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.transform.Result;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class XxeExploit1 {

	@PostMapping("/Attack1")
	public String Attack1(@RequestParam String cc)
	{
		JAXBContext context;
		String result ="";
		try {
			context = JAXBContext.newInstance(Userx.class);
			Unmarshaller unmarshaller = context.createUnmarshaller();
			XMLInputFactory factory = XMLInputFactory.newFactory();
			String xml =cc;
//			    "<?xml version=\"1.0\"?>\n"
//					+"<!DOCTYPE example ["
//					+ " <!ENTITY xxe SYSTEM \"file:///c:/sof.txt\">]>\n"
//			        + "<userx>\n"
//			        + "  <username>&xxe;</username>\n"
//			        + "</userx>";
			System.out.println(cc);
			XMLStreamReader reader = factory.createXMLStreamReader(new StringReader(xml));
			JAXBElement<Userx> element = unmarshaller.unmarshal(reader, Userx.class);
			Userx user = element.getValue();
			System.out.println(user.getUsername());
			StringWriter sw = new StringWriter();
			 Marshaller marshaller = context.createMarshaller();
	        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
	       
	        marshaller.marshal(element, sw);
	         result = sw.toString();
	        System.out.println(result);

		} catch (JAXBException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (XMLStreamException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		return result;
		
	}
	
	@PostMapping("/Attack2")
	public String Attack2(@RequestParam String cc)
	{
		JAXBContext context;
		String result ="";
		try {
			 context = JAXBContext.newInstance(Userx.class);
			Unmarshaller unmarshaller = context.createUnmarshaller();
			XMLInputFactory factory = XMLInputFactory.newFactory();
			String xml =
			    "<?xml version=\"1.0\"?>\n"
					+"<!DOCTYPE example ["
					+ " <!ENTITY xxe SYSTEM \"file:///c:/sof.txt\">]>\n"
			        + "<userx>\n"
			        + "  <username>&xxe;</username>\n"
			        + "</userx>";
			XMLStreamReader reader = factory.createXMLStreamReader(new StringReader(xml));
			JAXBElement<Userx> element = unmarshaller.unmarshal(reader, Userx.class);
			Userx user = element.getValue();
			System.out.println(user.getUsername());
			StringWriter sw = new StringWriter();
			 Marshaller marshaller = context.createMarshaller();
	        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
	       
	        marshaller.marshal(element, sw);
	         result = sw.toString();
	        System.out.println(result);

		} catch (JAXBException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (XMLStreamException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		return result;
		
	}
}
